<!--
Nefarious Motorsports ME7 ECU Flasher
Copyright (C) 2017  Nefarious Motorsports Inc

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Contact by Email: tony@nefariousmotorsports.com
-->
    
<ECUFlasher:BaseUserControl x:Class="ECUFlasher.ECUInfoControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ECUFlasher="clr-namespace:ECUFlasher"
    xmlns:props="clr-namespace:ECUFlasher.Properties"
    xmlns:Shared="clr-namespace:Shared;assembly=ECUShared"
    xmlns:Communication="clr-namespace:Communication;assembly=Communication"
    mc:Ignorable="d" 
    d:DesignHeight="300" d:DesignWidth="300"
    Background="{StaticResource BackgroundBrush}"
    BorderBrush="{StaticResource BackgroundBrush}"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">
    
    <ECUFlasher:BaseUserControl.Resources>

        <Style TargetType="MenuItem" BasedOn="{StaticResource ReactiveCommandMenuItemStyle}"/>
        
        <Style TargetType="Button" BasedOn="{StaticResource ReactiveCommandButtonStyle}"/>

        <Style TargetType="ComboBox" BasedOn="{StaticResource ValidationComboBoxStyle}"/>
        
        <!--TODO: need to play with marging and padding to be able to see the border-->
        <Style TargetType="Border">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        </Style>

        <Style TargetType="ListBoxItem">
            <Style.Resources>
                <!-- Background of selected item when focused -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource HighlightColor}" />
                <!-- Background of selected item when not focused -->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource HighlightColor}" />
            </Style.Resources>
            
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="ListBox">
            <Style.Resources>
                <!-- Background of selected item when not focused -->
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource BackgroundColor}" />
            </Style.Resources>
        </Style>

        <ECUFlasher:IdentOptionNameConverter x:Key="identOptionNameConverter"/>
        <ECUFlasher:DTCNameConverter x:Key="dtcNameConverter"/>

        <DataTemplate DataType="{x:Type Communication:KWP2000DTCInfo}">
            <DataTemplate.Resources>

                <!--need to pull the non-Control styled types into the data template-->
                <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}"/>

                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                </Style>

            </DataTemplate.Resources>

            <Border>
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=DTC, StringFormat=P{0:X4}}" Margin="0,0,5,0"/>
                        <TextBlock Text="{Binding Path=DTC, Converter={StaticResource dtcNameConverter}}"/>
                    </StackPanel>
                    <TextBlock Text="{Binding Path=Status, StringFormat=Status: 0x{0:X2}}"/><!--TODO: display readable status-->
                </StackPanel>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type Communication:KWP2000IdentificationOptionValue}">
            <DataTemplate.Resources>

                <!--need to pull the styled types into the data template-->
                <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}"/>
                
                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                </Style>


            </DataTemplate.Resources>
            <Border>
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=IdentOption, StringFormat=0x{0:X2}}" Margin="0,0,5,0"/>
                        <TextBlock Text="{Binding Path=IdentOption, Converter={StaticResource identOptionNameConverter}}"/>
                    </StackPanel>
                    <TextBlock Text="{Binding}"/><!--Converts via the ToString method for display-->
                </StackPanel>                
            </Border>
        </DataTemplate>

    </ECUFlasher:BaseUserControl.Resources>
    
    <Grid>        
        <Grid.RowDefinitions>
            <RowDefinition Height="3*" MinHeight="100"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="100" MinHeight="100"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <DockPanel Grid.Column="2">
                <WrapPanel DockPanel.Dock="Top">
                    <Button Command="{Binding Path=ReadDTCsCommand}"/>
                    <Button Command="{Binding Path=ClearDTCsCommand}"/>
                    <Button Command="{Binding Path=SaveDTCsCommand}"/>
                    <Button Command="{Binding Path=LoadDTCsCommand}"/>
                </WrapPanel>
                <Border DockPanel.Dock="Top">
                    <ListBox Name="ECUDTCsListBox" IsSynchronizedWithCurrentItem="True" SelectionMode="Extended" ItemsSource="{Binding Path=ECUDTCs}" Background="Transparent"
                                                 Shared:ListBoxHelper.AutoScrollToCurrentItem="True"/>
                </Border>
            </DockPanel>

            <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext" ResizeDirection="Columns" VerticalAlignment="Stretch"/>
            
            <DockPanel Grid.Column="0">
                <WrapPanel DockPanel.Dock="Top">
                    <Label Content="Read Info Session Type:"/>
                    <ComboBox ItemsSource="{Binding Path=AvailableReadInfoSessionTypes}" IsEnabled="{Binding ElementName=ReadInfoButton, Path=IsEnabled}"
                              SelectedItem="{Binding Path=ReadInfoSessionType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=true, ValidatesOnExceptions=true}"
                              ToolTip="Desired diagnostic session type for reading ECU info" ToolTipService.ShowOnDisabled="True"/>
                    <Button Name="ReadInfoButton" Command="{Binding Path=ReadInfoCommand}"/>
                    <Button Command="{Binding Path=SaveInfoCommand}"/>
                    <Button Command="{Binding Path=LoadInfoCommand}"/>
                    <Button Command="{Binding Path=RemoveInfoEntryCommand}" CommandParameter="{Binding ElementName=ECUInfoListBox, Path=SelectedItems}"/>
                </WrapPanel>
                <Border DockPanel.Dock="Top">
                    <ListBox Name="ECUInfoListBox" IsSynchronizedWithCurrentItem="True" SelectionMode="Extended" ItemsSource="{Binding Path=ECUInfo}" Background="Transparent"
                                             Shared:ListBoxHelper.AutoScrollToCurrentItem="True"/>
                </Border>
            </DockPanel>
        </Grid>

        <GridSplitter Grid.Row="1" ResizeBehavior="PreviousAndNext" ResizeDirection="Rows" Height="5" HorizontalAlignment="Stretch"/>

        <ECUFlasher:StatusWindow Grid.Row="2" DataContext="{Binding Path=App}"/>
        
    </Grid>
</ECUFlasher:BaseUserControl>
